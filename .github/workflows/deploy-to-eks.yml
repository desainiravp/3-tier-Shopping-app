name: Deploy Robot Shop to EKS with NGINX Ingress

on:
  push:
    branches:
      - master

env:
  AWS_REGION: ap-south-1
  EKS_CLUSTER_NAME: devops-eks-demo
  RELEASE_NAME: robot-shop
  NAMESPACE: robot-shop

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Setup kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: latest

    - name: Update kubeconfig
      run: |
        aws eks update-kubeconfig \
          --region $AWS_REGION \
          --name $EKS_CLUSTER_NAME

    - name: Setup Helm
      uses: azure/setup-helm@v4

    - name: Install NGINX Ingress Controller (if not already)
      run: |
        kubectl get ns ingress-nginx || \
        kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.10.1/deploy/static/provider/aws/deploy.yaml

    - name: Wait for NGINX LoadBalancer EXTERNAL-IP
      run: |
        echo "Waiting for NGINX ingress load balancer to get an external IP..."
        for i in {1..30}; do
          EXTERNAL_IP=$(kubectl get svc ingress-nginx-controller -n ingress-nginx -o jsonpath='{.status.loadBalancer.ingress[0].hostname}')
          if [[ -n "$EXTERNAL_IP" ]]; then
            echo "External IP: $EXTERNAL_IP"
            break
          fi
          echo "Retrying in 10s..."
          sleep 10
        done

    - name: Deploy Robot Shop via Helm
      run: |
        helm upgrade --install $RELEASE_NAME ./EKS/helm \
          --namespace $NAMESPACE \
          --create-namespace
